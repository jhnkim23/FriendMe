{"ast":null,"code":"var _jsxFileName = \"/Users/arjunrajaram/FriendMe/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Slider from './components/Slider/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [radius, setRadius] = useState(0);\n  const [introduction, setIntroduction] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {} else {}\n  });\n  function handleIntroInput(e) {\n    setIntroduction(e.target.value);\n  }\n  ;\n  async function QueryUser(e) {\n    e.preventDefault();\n    console.log(\"User Introduction:\", introduction);\n    /* Now that we have intro, radius, lat/long states, we need to send this info using a await fetch call to the server */\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friend.me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video-player\",\n        id: \"user-1\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video-player\",\n        id: \"user-2\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"userInput\",\n      children: \"Tell us a little bit about yourself: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"userInput\",\n      name: \"userInput\",\n      placeholder: \"Type your introduction\",\n      value: introduction,\n      onChange: handleIntroInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      radius: radius,\n      setRadius: setRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      title: \"Find\",\n      onClick: QueryUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kXdCjJ4dVGnbn53PktKzoz9yhLY=\");\n_c = App;\n;\nfunction SubmitButton({\n  title,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: [\" \", title, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n_c2 = SubmitButton;\n;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SubmitButton\");","map":{"version":3,"names":["useState","useEffect","Slider","jsxDEV","_jsxDEV","App","_s","radius","setRadius","introduction","setIntroduction","latitude","setLatitude","longitude","setLongitude","navigator","handleIntroInput","e","target","value","QueryUser","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","autoPlay","playsInline","htmlFor","type","name","placeholder","onChange","SubmitButton","title","onClick","_c","_c2","$RefreshReg$"],"sources":["/Users/arjunrajaram/FriendMe/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport Slider from './components/Slider/Slider'\n\nfunction App() {\n  const [radius, setRadius] = useState(0);\n  const [introduction, setIntroduction] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  \n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n\n    }\n    else {\n      \n    }\n  });\n\n  function handleIntroInput(e) {\n    setIntroduction(e.target.value)\n  };\n\n  async function QueryUser(e) {\n    e.preventDefault();\n\n    console.log(\"User Introduction:\", introduction);\n    /* Now that we have intro, radius, lat/long states, we need to send this info using a await fetch call to the server */\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Friend.me</h2>\n\n      {/*Maybe make a componenet for the videos*/}\n      <div id = \"videos\">\n        <video className=\"video-player\" id=\"user-1\" autoPlay playsInline></video>\n        <video className=\"video-player\" id=\"user-2\" autoPlay playsInline></video>\n      </div>\n\n      <label htmlFor=\"userInput\">Tell us a little bit about yourself: </label>\n      <input type=\"text\" id=\"userInput\" name=\"userInput\" placeholder=\"Type your introduction\" value = {introduction} onChange = {handleIntroInput}/>\n\n      <Slider radius = {radius} setRadius = {setRadius}/>\n\n      <SubmitButton title=\"Find\" onClick={QueryUser}/>\n\n      {/*Also need some geolocation state as well to get lat and longitude right? */}\n    </div>\n  );\n};\n\nfunction SubmitButton({title, onClick}) {\n    return (\n      <button onClick={onClick}> {title} </button>\n    )\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}