{"ast":null,"code":"var _jsxFileName = \"/Users/arjunrajaram/FriendMe/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Slider from './components/Slider/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [radius, setRadius] = useState(0);\n  const [introduction, setIntroduction] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  function handleIntroInput(e) {\n    setIntroduction(e.target.value);\n  }\n  async function QueryUser(e) {\n    e.preventDefault();\n    console.log(\"User Introduction:\", introduction);\n    /* Now that we have intro, radius, lat/long states, we need to send this info using a await fetch call to the server */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friend.me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-1\",\n        autoplay: true,\n        playsinline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-2\",\n        autoplay: true,\n        playsinline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"userInput\",\n      children: \"Tell us a little bit about yourself: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"userInput\",\n      name: \"userInput\",\n      placeholder: \"Type your introduction\",\n      value: introduction,\n      onChange: handleIntroInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      radius: radius,\n      setRadius: setRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      title: \"Find\",\n      onClick: QueryUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dM6x8GB+EAY977TnXm4ZcOjTv/Q=\");\n_c = App;\nfunction SubmitButton({\n  title,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: [\" \", title, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n_c2 = SubmitButton;\n;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SubmitButton\");","map":{"version":3,"names":["useState","Slider","jsxDEV","_jsxDEV","App","_s","radius","setRadius","introduction","setIntroduction","latitude","setLatitude","longitude","setLongitude","handleIntroInput","e","target","value","QueryUser","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","class","autoplay","playsinline","for","type","name","placeholder","onChange","SubmitButton","title","onClick","_c","_c2","$RefreshReg$"],"sources":["/Users/arjunrajaram/FriendMe/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Slider from './components/Slider/Slider'\n\nfunction App() {\n  const [radius, setRadius] = useState(0);\n  const [introduction, setIntroduction] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  \n  function handleIntroInput(e) {\n    setIntroduction(e.target.value)\n  }\n\n  async function QueryUser(e) {\n    e.preventDefault();\n\n    console.log(\"User Introduction:\", introduction);\n    /* Now that we have intro, radius, lat/long states, we need to send this info using a await fetch call to the server */\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Friend.me</h2>\n\n      <div id = \"videos\">\n        <video class=\"video-player\" id=\"user-1\" autoplay playsinline></video>\n        <video class=\"video-player\" id=\"user-2\" autoplay playsinline></video>\n      </div>\n\n      <label for=\"userInput\">Tell us a little bit about yourself: </label>\n      <input type=\"text\" id=\"userInput\" name=\"userInput\" placeholder=\"Type your introduction\" value = {introduction} onChange = {handleIntroInput}/>\n\n      <Slider radius = {radius} setRadius = {setRadius}/>\n\n      <SubmitButton title=\"Find\" onClick={QueryUser}/>\n\n      {/*Also need some geolocation state as well to get lat and longitude right? */}\n    </div>\n  );\n}\n\nfunction SubmitButton({title, onClick}) {\n    return (\n      <button onClick={onClick}> {title} </button>\n    )\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}